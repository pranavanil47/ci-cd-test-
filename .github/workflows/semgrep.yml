name: Semgrep Offline Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  semgrep:
    name: Offline Semgrep Scan
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y rsync
        python3 -m pip install semgrep

    - name: Setup SSH and Download Custom Rules
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H 34.59.19.208 >> ~/.ssh/known_hosts

        # Download rules to local folder
        rsync -avz -e "ssh -i ~/.ssh/id_rsa" \
          pranavanil123@34.59.19.208:/home/pranavanil123/testing/Semgrep-rules ./custom-semgrep-rules

    - name: Run Semgrep with Custom Rules (code-only)
      id: run_scan
      run: |
        mkdir -p security-reports
        TIMESTAMP=$(date +%Y%m%d-%H%M%S)
        
        # Only scan code, exclude the rules and workflow folders
        semgrep scan --config ./custom-semgrep-rules . \
          --exclude=custom-semgrep-rules \
          --exclude=.github \
          --json --json-output=security-reports/semgrep-results-${TIMESTAMP}.json
        
        echo "file_name=semgrep-results-${TIMESTAMP}.json" >> $GITHUB_OUTPUT

    - name: Upload Scan Result to VM
      run: |
        FILE_NAME=${{ steps.run_scan.outputs.file_name }}
        scp -i ~/.ssh/id_rsa security-reports/$FILE_NAME \
          pranavanil123@34.59.19.208:/home/pranavanil123/semgrep_findings/
