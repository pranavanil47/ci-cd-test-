name: Semgrep + Trivy Security Scans

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  security-scan:
    name: Semgrep + Trivy Scan
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y rsync wget
        python3 -m pip install semgrep

        # Install Trivy
        wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_Linux-64bit.deb
        sudo dpkg -i trivy_Linux-64bit.deb

    - name: Setup SSH and Download Custom Rules
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H 34.59.19.208 >> ~/.ssh/known_hosts

        # Download rules to local folder
        rsync -avz -e "ssh -i ~/.ssh/id_rsa" \
          pranavanil123@34.59.19.208:/home/pranavanil123/testing/Semgrep-rules ./custom-semgrep-rules

    # ---------------- SEMGREP ----------------
    - name: Run Semgrep with Custom Rules (code-only)
      id: semgrep_scan
      run: |
        mkdir -p security-reports
        TIMESTAMP=$(date +%Y%m%d-%H%M%S)
        
        semgrep scan --config ./custom-semgrep-rules . \
          --exclude=custom-semgrep-rules \
          --exclude=.github \
          --json --json-output=security-reports/semgrep-results-${TIMESTAMP}.json
        
        echo "semgrep_file=semgrep-results-${TIMESTAMP}.json" >> $GITHUB_OUTPUT

    - name: Upload Semgrep Result to VM
      run: |
        FILE_NAME=${{ steps.semgrep_scan.outputs.semgrep_file }}
        scp -i ~/.ssh/id_rsa security-reports/$FILE_NAME \
          pranavanil123@34.59.19.208:/home/pranavanil123/findings/semgrep/

    # ---------------- TRIVY SCA ----------------
    - name: Run Trivy SCA (Filesystem Scan)
      id: trivy_sca
      run: |
        mkdir -p security-reports
        TIMESTAMP=$(date +%Y%m%d-%H%M%S)
        
        trivy fs --security-checks vuln,secret,config --format json \
          --output security-reports/trivy-sca-${TIMESTAMP}.json .
        
        echo "sca_file=trivy-sca-${TIMESTAMP}.json" >> $GITHUB_OUTPUT

    - name: Upload Trivy SCA Result to VM
      run: |
        FILE_NAME=${{ steps.trivy_sca.outputs.sca_file }}
        scp -i ~/.ssh/id_rsa security-reports/$FILE_NAME \
          pranavanil123@34.59.19.208:/home/pranavanil123/findings/trivy_sca/

    # ---------------- TRIVY SBOM ----------------
    - name: Generate Trivy SBOM (CycloneDX)
      id: trivy_sbom
      run: |
        mkdir -p security-reports
        TIMESTAMP=$(date +%Y%m%d-%H%M%S)
        
        trivy sbom --format cyclonedx --output security-reports/trivy-sbom-${TIMESTAMP}.json .
        
        echo "sbom_file=trivy-sbom-${TIMESTAMP}.json" >> $GITHUB_OUTPUT

    - name: Upload Trivy SBOM to VM
      run: |
        FILE_NAME=${{ steps.trivy_sbom.outputs.sbom_file }}
        scp -i ~/.ssh/id_rsa security-reports/$FILE_NAME \
          pranavanil123@34.59.19.208:/home/pranavanil123/findings/trivy_SBOM/
